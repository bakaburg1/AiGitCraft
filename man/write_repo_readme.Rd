% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LLM_operations.R
\name{write_repo_readme}
\alias{write_repo_readme}
\title{Write a README for a code repo}
\usage{
write_repo_readme(
  repo_path = getOption("aigitcraft_repo", getwd()),
  use_description = TRUE,
  use_current_readme = TRUE,
  file_exts = getOption("aigitcraft_file_exts"),
  screened_folders = getOption("aigitcraft_screened_folders", repo_path),
  recursive = TRUE,
  ...
)
}
\arguments{
\item{repo_path}{The path to the repository.}

\item{use_description}{Logical indicating whether to include the content of
the DESCRIPTION file in the repository.}

\item{use_current_readme}{Logical indicating whether to update the content of
the current README.md file in the repository.}

\item{file_exts}{The file extensions of the files to analyze to write the
README. Should be a vector of extensions, e.g. c("R", "py", "js"). The
extensions can be saved and retrieved project-wise using the
\code{aigitcraft_file_exts} option.}

\item{screened_folders}{The path to the folders to be screened for code
files. If NULL (the default), the whole repository is screened. It is
suggested to include only the code folders, e.g. c("R", "src"), to avoid
analyzing non-code and documentation files.}

\item{recursive}{Logical indicating whether to search for files recursively.}

\item{...}{Additional arguments to be passed to \code{llmR::prompt_llm}.}
}
\value{
A character string with the content of the README file.
}
\description{
This function uses LLM to write a README file for a code repository based on
the content of the DESCRIPTION (optional) file and the code files. If the
README.md file already exists in the repository, the function will try to
update it with the new content.
}
